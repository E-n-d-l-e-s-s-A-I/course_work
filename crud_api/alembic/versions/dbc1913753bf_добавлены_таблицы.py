"""Добавлены таблицы

Revision ID: dbc1913753bf
Revises:
Create Date: 2025-03-13 23:14:33.867556

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "dbc1913753bf"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cargo",
        sa.Column("id", sa.Uuid(), nullable=False, comment="Идентификатор груза"),
        sa.Column("name", sa.String(), nullable=False, comment="Название груза"),
        sa.Column("weight", sa.Float(), nullable=False, comment="Вес груза"),
        sa.PrimaryKeyConstraint("id"),
        comment="Таблица с грузами",
    )
    op.create_index(op.f("ix_cargo_id"), "cargo", ["id"], unique=False)
    op.create_table(
        "city",
        sa.Column("id", sa.Uuid(), nullable=False, comment="Идентификатор города"),
        sa.Column("name", sa.String(), nullable=False, comment="Название города"),
        sa.PrimaryKeyConstraint("id"),
        comment="Таблица с городами",
    )
    op.create_index(op.f("ix_city_id"), "city", ["id"], unique=False)
    op.create_table(
        "truck",
        sa.Column("id", sa.Uuid(), nullable=False, comment="Идентификатор грузовика"),
        sa.Column("name", sa.String(), nullable=False, comment="Название грузовика"),
        sa.Column("weight", sa.Float(), nullable=False, comment="Вес грузовика"),
        sa.Column("speed", sa.Float(), nullable=False, comment="Скорость грузовика"),
        sa.Column("height", sa.Float(), nullable=False, comment="Высота грузовика"),
        sa.Column(
            "max_cargo_weight",
            sa.Float(),
            nullable=False,
            comment="Максимальный вес груза",
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Таблица с грузовиками",
    )
    op.create_index(op.f("ix_truck_id"), "truck", ["id"], unique=False)
    op.create_table(
        "path",
        sa.Column("id", sa.Uuid(), nullable=False, comment="Идентификатор пути"),
        sa.Column(
            "city_from_id",
            sa.Uuid(),
            nullable=False,
            comment="Идентификатор города отправления",
        ),
        sa.Column(
            "city_to_id",
            sa.Uuid(),
            nullable=False,
            comment="Идентификатор города прибытия",
        ),
        sa.Column("distance", sa.Float(), nullable=False, comment="Протяженность пути"),
        sa.Column(
            "max_weight",
            sa.Float(),
            nullable=False,
            comment="Максимально допустимый вес на пути",
        ),
        sa.Column(
            "max_height",
            sa.Float(),
            nullable=False,
            comment="Максимально допустимая высота на пути",
        ),
        sa.ForeignKeyConstraint(
            ["city_from_id"],
            ["city.id"],
        ),
        sa.ForeignKeyConstraint(
            ["city_to_id"],
            ["city.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Таблица с путями",
    )
    op.create_index(op.f("ix_path_city_from_id"), "path", ["city_from_id"], unique=False)
    op.create_index(op.f("ix_path_city_to_id"), "path", ["city_to_id"], unique=False)
    op.create_index(op.f("ix_path_id"), "path", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_path_id"), table_name="path")
    op.drop_index(op.f("ix_path_city_to_id"), table_name="path")
    op.drop_index(op.f("ix_path_city_from_id"), table_name="path")
    op.drop_table("path")
    op.drop_index(op.f("ix_truck_id"), table_name="truck")
    op.drop_table("truck")
    op.drop_index(op.f("ix_city_id"), table_name="city")
    op.drop_table("city")
    op.drop_index(op.f("ix_cargo_id"), table_name="cargo")
    op.drop_table("cargo")
    # ### end Alembic commands ###
